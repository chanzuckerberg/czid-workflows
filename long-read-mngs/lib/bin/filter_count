#!/bin/bash

# Counts reads and bases of a fastq file, raising an error if there are no reads remaining
#   Intended to run after steps that involve filtering the input fasta like host filtering
#   or subsampling

# Arguments:
#   1: path to the fastq file
#   2: a prefix for the output files such as (sample_validated)
#   3: a message to display to the user if all reads are filtered out at this step

set -euxo pipefail

if [[ $1 == *gz ]]; then
    WC_OUT=$(gzip -dc $1 | awk 'NR % 4 == 2' | wc)
else
    WC_OUT=$(cat $1 | awk 'NR % 4 == 2' | wc)
fi
LINES=$(echo $WC_OUT | cut -f 2 -d ' ')
CHARS=$(echo $WC_OUT | cut -f 3 -d ' ')
BASES=$(expr $CHARS - $LINES)
echo $LINES > $2_reads.count
echo $BASES > $2_bases.count

if [[ $LINES == 0 ]]; then
    raise_error InsufficientReadsError $3
fi